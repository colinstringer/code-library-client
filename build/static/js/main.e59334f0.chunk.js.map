{"version":3,"sources":["config/constants.js","store/user/selectors.js","store/appState/selectors.js","store/appState/actions.js","store/currentLibrary/actions.js","store/currentPage/actions.js","store/user/actions.js","components/MessageBox/index.js","pages/Login/index.js","pages/SignUp/index.js","store/currentPage/selectors.js","components/Example/index.js","components/MainHeader/index.js","pages/ViewPage/index.js","components/AddExample/index.js","pages/EditPage/index.js","pages/Homepage/index.js","components/Header/index.js","store/currentLibrary/selectors.js","components/SidebarCategory/index.js","components/Sidebar/index.js","App.js","serviceWorker.js","store/appState/reducer.js","store/user/reducer.js","store/currentLibrary/reducer.js","store/currentPage/reducer.js","store/rootReducer.js","store/index.js","index.js"],"names":["apiUrl","selectToken","state","user","token","selectUsername","username","selectMessage","appState","message","selectCurrentLibraryUsername","currentLibraryUsername","setCurrentLibraryUsername","type","payload","setMessage","variant","dismissable","text","showMessageWithTimeout","timeOutMilliSeconds","dispatch","setTimeout","fetchCurrentLibrary","getState","a","axios","get","response","data","library","console","log","fetchCurrentPage","id","loginSuccess","userWithToken","logOut","MessageBox","useSelector","useDispatch","showMessage","className","Alert","show","dismissible","onClose","Login","history","useHistory","useState","setUsername","password","setPassword","useEffect","push","Container","Form","as","Col","md","span","offset","Group","controlId","Label","Control","value","onChange","event","target","placeholder","required","Button","onClick","preventDefault","post","login","SignUp","renderAmount","setRenderAmount","Text","signUp","selectCurrentPage","currentPage","Example","codeblock","output","Row","xs","lg","xl","language","MainHeader","pageId","parseInt","useParams","href","ViewPage","name","fluid","examples","map","example","key","AddExample","codeblockPreviewText","setCodeblockPreviewText","outputPreviewText","setOutputPreviewText","rows","cols","maxLength","e","headers","Authorization","addNewExample","EditPage","Homepage","style","marginTop","Header","loginLogoutControls","fontSize","myLibrary","selectCurrentLibrary","currentLibrary","SidebarCategory","category","categoryStyle","linkStyle","inputStyle","loggedInUsername","newPageName","setNewPageName","pageInput","onKeyPress","categoryId","onBlur","pages","page","Sidebar","categoryFontSize","setCategoryFontSize","linkFontSize","setLinkFontSize","inputWidth","setInputWidth","newCategoryName","setNewCategoryName","width","categoryInput","libraryId","onMouseEnter","onMouseLeave","categories","App","exact","path","component","Boolean","window","location","hostname","match","initialState","loading","localStorage","getItem","combineReducers","action","setItem","removeItem","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","ReduxThunk","store","createStore","reducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e59334f0.chunk.js","sourcesContent":["export const apiUrl = \"https://code-library-server.herokuapp.com\"\nexport const DEFAULT_MESSAGE_TIMEOUT = 3000;\n","export const selectToken = state => state.user.token;\nexport const selectUsername = state => state.user.username;\nexport const selectUser = state => state.user;\n","export const selectAppLoading = state => state.appState.loading;\nexport const selectMessage = state => state.appState.message;\nexport const selectCurrentLibraryUsername = state => state.appState.currentLibraryUsername;\n","import { DEFAULT_MESSAGE_TIMEOUT } from \"../../config/constants\";\n\nexport const APP_LOADING = \"APP_LOADING\";\nexport const APP_DONE_LOADING = \"APP_DONE_LOADING\";\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\nexport const SET_CURRENT_LIBRARY_USERNAME_DEFAULT =\n  \"SET_CURRENT_LIBRARY_USERNAME_DEFAULT\";\nexport const SET_CURRENT_LIBRARY_USERNAME = \"SET_CURRENT_LIBRARY_USERNAME\";\n\nexport const appLoading = () => ({ type: APP_LOADING });\nexport const appDoneLoading = () => ({ type: APP_DONE_LOADING });\nexport const clearMessage = () => ({ type: CLEAR_MESSAGE });\nexport const setCurrentLibraryUsernameDefault = () => ({\n  type: SET_CURRENT_LIBRARY_USERNAME_DEFAULT,\n});\n\nexport const setCurrentLibraryUsername = (username) => {\n  return {\n    type: SET_CURRENT_LIBRARY_USERNAME,\n    payload: username,\n  };\n};\n\nexport const setMessage = (variant, dismissable, text) => {\n  return {\n    type: SET_MESSAGE,\n    payload: {\n      variant,\n      dismissable,\n      text,\n    },\n  };\n};\n\nexport const showMessageWithTimeout = (\n  variant,\n  dismissable,\n  text,\n  timeOutMilliSeconds\n) => {\n  return (dispatch) => {\n    dispatch(setMessage(variant, dismissable, text));\n\n    const timeout = timeOutMilliSeconds || DEFAULT_MESSAGE_TIMEOUT;\n\n    setTimeout(() => dispatch(clearMessage()), timeout);\n  };\n};\n","import axios from \"axios\";\nimport { apiUrl } from \"../../config/constants\";\n\nimport { selectCurrentLibraryUsername } from \"../appState/selectors\";\nimport { appLoading, appDoneLoading, setMessage } from \"../appState/actions\";\n\nexport const FETCH_CURRENT_LIBRARY = \"FETCH_CURRENT_LIBRARY\";\n\nconst fetchLibrary = (library) => {\n  return {\n    type: FETCH_CURRENT_LIBRARY,\n    payload: library,\n  };\n};\n\nexport const fetchCurrentLibrary = () => {\n  return async (dispatch, getState) => {\n    let username = selectCurrentLibraryUsername(getState());\n\n    if (!username || username === \"undefined\") username = \"admin\";\n\n    dispatch(appLoading());\n\n    try {\n      const response = await axios.get(`${apiUrl}/library/${username}`);\n\n      dispatch(fetchLibrary(response.data.library));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n      dispatch(appDoneLoading());\n    }\n  };\n};\n","import axios from \"axios\";\nimport { apiUrl } from \"../../config/constants\";\n\nimport { appLoading, appDoneLoading, setMessage } from \"../appState/actions\";\n\nexport const FETCH_CURRENT_PAGE = \"FETCH_CURRENT_PAGE\";\n\nconst fetchPage = (page) => {\n  return {\n    type: FETCH_CURRENT_PAGE,\n    payload: page,\n  };\n};\n\nexport const fetchCurrentPage = (id) => {\n  return async (dispatch, getState) => {\n    dispatch(appLoading());\n    try {\n      const response = await axios.get(`${apiUrl}/current-page/${id}`);\n\n      dispatch(fetchPage(response.data));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n      dispatch(appDoneLoading());\n    }\n  };\n};\n","import { apiUrl } from \"../../config/constants\";\nimport axios from \"axios\";\nimport { selectToken } from \"./selectors\";\nimport { fetchCurrentLibrary } from \"../currentLibrary/actions\";\nimport {\n  appLoading,\n  appDoneLoading,\n  showMessageWithTimeout,\n  setMessage,\n  setCurrentLibraryUsernameDefault\n} from \"../appState/actions\";\nimport { fetchCurrentPage } from \"../currentPage/actions\";\n\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const TOKEN_STILL_VALID = \"TOKEN_STILL_VALID\";\nexport const LOG_OUT = \"LOG_OUT\";\n\nconst loginSuccess = (userWithToken) => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: userWithToken,\n  };\n};\n\nconst tokenStillValid = (userWithoutToken) => ({\n  type: TOKEN_STILL_VALID,\n  payload: userWithoutToken,\n});\n\nconst logOutSuccess = () => ({ type: LOG_OUT });\n\nexport const logOut = () => {\n  return async (dispatch, getState) => {\n    dispatch(logOutSuccess());\n    dispatch(setCurrentLibraryUsernameDefault());\n    dispatch(\n      showMessageWithTimeout(\"success\", false, \"successfully logged out\", 2000)\n    );\n    dispatch(fetchCurrentLibrary())\n  };\n};\n\nexport const addNewExample = (codeblock, output, pageId) => {\n  return async (dispatch, getState) => {\n    const token = selectToken(getState());\n\n    try {\n      await axios.post(\n        `${apiUrl}/example`,\n        {\n          codeblock,\n          output,\n          pageId,\n        },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      dispatch(fetchCurrentPage(pageId));\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n    }\n  };\n};\n\nexport const addPage = (name, categoryId) => {\n  return async (dispatch, getState) => {\n    const token = selectToken(getState());\n\n    try {\n      await axios.post(\n        `${apiUrl}/page`,\n        {\n          name,\n          categoryId,\n        },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      dispatch(fetchCurrentLibrary());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n    }\n  };\n};\n\nexport const addCategory = (name, libraryId) => {\n  return async (dispatch, getState) => {\n    const token = selectToken(getState());\n\n    try {\n      await axios.post(\n        `${apiUrl}/category`,\n        {\n          name,\n          libraryId,\n        },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      dispatch(fetchCurrentLibrary());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n    }\n  };\n};\n\nexport const signUp = (username, password) => {\n  return async (dispatch, getState) => {\n    dispatch(appLoading());\n    try {\n      const response = await axios.post(`${apiUrl}/signup`, {\n        username,\n        password,\n      });\n\n      dispatch(loginSuccess(response.data));\n      dispatch(showMessageWithTimeout(\"success\", true, \"account created\"));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n      dispatch(appDoneLoading());\n    }\n  };\n};\n\nexport const login = (username, password) => {\n  return async (dispatch, getState) => {\n    dispatch(appLoading());\n    try {\n      const response = await axios.post(`${apiUrl}/login`, {\n        username,\n        password,\n      });\n\n      dispatch(loginSuccess(response.data));\n      dispatch(showMessageWithTimeout(\"success\", false, \"welcome back!\", 1500));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n      dispatch(appDoneLoading());\n    }\n  };\n};\n\nexport const getUserWithStoredToken = () => {\n  return async (dispatch, getState) => {\n    // get token from the state\n    const token = selectToken(getState());\n\n    // if we have no token, stop\n    if (token === null) return;\n\n    dispatch(appLoading());\n    try {\n      // if we do have a token,\n      // check wether it is still valid or if it is expired\n      const response = await axios.get(`${apiUrl}/me`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      // token is still valid\n      dispatch(tokenStillValid(response.data));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.message);\n      } else {\n        console.log(error);\n      }\n      // if we get a 4xx or 5xx response,\n      // get rid of the token by logging out\n      dispatch(logOut());\n      dispatch(appDoneLoading());\n    }\n  };\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Alert } from \"react-bootstrap\";\n\nimport { selectMessage } from \"../../store/appState/selectors\";\nimport { clearMessage } from \"../../store/appState/actions\";\n\nexport default function MessageBox() {\n  const message = useSelector(selectMessage);\n  const dispatch = useDispatch();\n  const showMessage = message !== null;\n  if (!showMessage) return null;\n\n  return (\n    <div className=\"message\">\n      <Alert\n        show={showMessage}\n        variant={message.variant}\n        dismissible={message.dismissable}\n        onClose={message.dismissable ? () => dispatch(clearMessage()) : null}\n      >\n        {message.text}\n      </Alert>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { login } from \"../../store/user/actions\";\nimport { selectToken } from \"../../store/user/selectors\";\n\nimport { Col } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport MessageBox from \"../../components/MessageBox\";\n\nexport default function Login() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const token = useSelector(selectToken);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    if (token !== null) {\n      history.push(\"/\");\n    }\n  }, [token, history]);\n\n  function submitForm(event) {\n    event.preventDefault();\n\n    dispatch(login(username, password));\n\n    setUsername(\"\");\n    setPassword(\"\");\n  }\n\n  return (\n    <>\n      <MessageBox />\n\n      <Container>\n        <Form as={Col} md={{ span: 6, offset: 3 }} className=\"mt-5\">\n          <h1 className=\"mt-5 mb-5\">Login</h1>\n          <Form.Group controlId=\"formBasicUsername\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              value={username}\n              onChange={(event) => setUsername(event.target.value)}\n              type=\"username\"\n              placeholder=\"Enter username\"\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mt-5\">\n            <Button variant=\"primary\" type=\"submit\" onClick={submitForm}>\n              Log in\n            </Button>\n          </Form.Group>\n        </Form>\n      </Container>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { signUp } from \"../../store/user/actions\";\nimport { selectToken } from \"../../store/user/selectors\";\n\nimport { Col } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport MessageBox from \"../../components/MessageBox\";\n\nexport default function SignUp() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const token = useSelector(selectToken);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [renderAmount, setRenderAmount] = useState(0);\n\n  useEffect(() => {\n    if (renderAmount === 1) history.push(\"/\");\n    setRenderAmount(renderAmount + 1);\n  }, [token, history]);\n\n  function submitForm(event) {\n    event.preventDefault();\n\n    dispatch(signUp(username, password));\n\n    setUsername(\"\");\n    setPassword(\"\");\n  }\n\n  return (\n    <>\n      <MessageBox />\n      <Container>\n        <Form as={Col} md={{ span: 6, offset: 3 }} className=\"mt-5\">\n          <h1 className=\"mt-5 mb-5\">Signup</h1>\n\n          <Form.Group controlId=\"formBasicUsernam\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              value={username}\n              onChange={(event) => setUsername(event.target.value)}\n              type=\"username\"\n              placeholder=\"Enter username\"\n              required\n            />\n            <Form.Text className=\"text-muted\"></Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mt-5\">\n            <Button variant=\"primary\" type=\"submit\" onClick={submitForm}>\n              Sign up\n            </Button>\n          </Form.Group>\n        </Form>\n      </Container>\n    </>\n  );\n}\n","export const selectCurrentPage = state => state.currentPage;\n","import \"./style.css\";\nimport React from \"react\";\n\nimport Highlight from \"react-highlight\";\nimport { Row, Col } from \"react-bootstrap\";\n\nfunction Example({ codeblock, output }) {\n  return (\n    <Row className=\"row\">\n      <Col xs={12} md={12} lg={6} xl={6}>\n        <p>Code</p>\n        <Highlight language=\"javascript\">{codeblock}</Highlight>\n      </Col>\n      <Col\n        xs={12}\n        md={12}\n        lg={{ span: 5, offset: 1 }}\n        xl={{ span: 5, offset: 1 }}\n      >\n        <p>Output</p>\n        <Highlight language=\"javascript\">{output}</Highlight>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Example;\n","import \"./style.css\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectUsername } from \"../../store/user/selectors\";\nimport { selectCurrentLibraryUsername } from \"../../store/appState/selectors\";\n\nfunction MainHeader() {\n  const pageId = parseInt(useParams().pageId);\n  const loggedInUsername = useSelector(selectUsername);\n  const currentLibraryUsername = useSelector(selectCurrentLibraryUsername);\n\n  if (loggedInUsername !== currentLibraryUsername) return null;\n\n  return (\n    <div className=\"main-header\">\n      <a href={`/view-page/${pageId}`}>View page</a>\n      <a href={`/edit-page/${pageId}`}>Edit page</a>\n    </div>\n  );\n}\n\nexport default MainHeader;\n","import \"./style.css\";\nimport React, { useEffect } from \"react\";\n\nimport { Container } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchCurrentPage } from \"../../store/currentPage/actions\";\nimport { selectCurrentPage } from \"../../store/currentPage/selectors\";\n\nimport Example from \"../../components/Example\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MessageBox from \"../../components/MessageBox\";\n\nfunction ViewPage() {\n  const dispatch = useDispatch();\n  const pageId = parseInt(useParams().pageId);\n  const currentPage = useSelector(selectCurrentPage);\n\n  useEffect(() => {\n    dispatch(fetchCurrentPage(pageId));\n  }, [dispatch, pageId]);\n\n  return (\n    <div>\n      <MainHeader />\n      <MessageBox />\n\n      <div className=\"view-page\">\n        <h1>{currentPage.name}</h1>\n        <Container fluid>\n          {currentPage.examples.map((example) => (\n            <Example\n              key={example.id}\n              codeblock={example.codeblock}\n              output={example.output}\n            />\n          ))}\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default ViewPage;\n","import \"./style.css\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport { addNewExample } from \"../../store/user/actions\";\n\nimport Example from \"../Example\";\n\nfunction AddExample() {\n  const dispatch = useDispatch();\n  const pageId = parseInt(useParams().pageId);\n\n  const [codeblockPreviewText, setCodeblockPreviewText] = useState(\n    \"enter new codeblock\"\n  );\n  const [outputPreviewText, setOutputPreviewText] = useState(\n    \"enter new output\"\n  );\n\n  function handleAddNewExample() {\n    dispatch(addNewExample(codeblockPreviewText, outputPreviewText, pageId));\n    setCodeblockPreviewText(\"enter new codeblock\");\n    setOutputPreviewText(\"enter new output\");\n  }\n\n  return (\n    <>\n      <Row className=\"add-example-row\">\n        <p>Add example</p>\n        <Col xs={12} md={12} lg={12} xl={12} className=\"add-example-col\">\n          <textarea\n            rows=\"4\"\n            cols=\"60\"\n            maxLength=\"2000\"\n            type=\"text\"\n            className=\"name\"\n            value={codeblockPreviewText}\n            onChange={(e) => setCodeblockPreviewText(e.target.value)}\n          />\n        </Col>\n        <Col xs={12} md={12} lg={12} xl={12} className=\"add-example-col\">\n          <textarea\n            rows=\"4\"\n            cols=\"35\"\n            maxLength=\"2000\"\n            type=\"text\"\n            className=\"name\"\n            value={outputPreviewText}\n            onChange={(e) => setOutputPreviewText(e.target.value)}\n          />\n        </Col>\n        <h2>Preview for new example</h2>\n        <Col xs={12} md={12} lg={12} xl={12} className=\"add-example-col\">\n          <Example\n            codeblock={codeblockPreviewText}\n            output={outputPreviewText}\n          />\n        </Col>\n        <button className=\"add-example-button\" onClick={handleAddNewExample}>\n          Add new example\n        </button>\n      </Row>\n    </>\n  );\n}\n\nexport default AddExample;\n","import \"./style.css\";\nimport React, { useEffect } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchCurrentPage } from \"../../store/currentPage/actions\";\nimport { selectCurrentPage } from \"../../store/currentPage/selectors\";\n\nimport Example from \"../../components/Example\";\nimport MainHeader from \"../../components/MainHeader\";\nimport AddExample from \"../../components/AddExample\";\nimport MessageBox from \"../../components/MessageBox\";\n\nfunction EditPage() {\n  const dispatch = useDispatch();\n  const currentPage = useSelector(selectCurrentPage);\n  const pageId = parseInt(useParams().pageId);\n\n  useEffect(() => {\n    dispatch(fetchCurrentPage(pageId));\n  }, [dispatch, pageId]);\n\n  return (\n    <div>\n      <MainHeader />\n      <MessageBox />\n      <div className=\"view-page\">\n        <h1>Edit the '{currentPage.name}' page</h1>\n        <Container fluid>\n          {currentPage.examples.map((example) => (\n            <Example\n              key={example.id}\n              codeblock={example.codeblock}\n              output={example.output}\n            />\n          ))}\n          <AddExample />\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default EditPage;\n","import \"./style.css\";\nimport React from \"react\";\n\nimport MessageBox from \"../../components/MessageBox\";\n\nfunction Homepage() {\n  return (\n    <>\n      <MessageBox />\n      <div className=\"homepage\">\n        <div className=\"homepage-content\">\n          <h2 style={{ marginTop: \"10px\" }}>\n            Have you ever encountered this situation?\n          </h2>\n          <p>\n            You're programming a feature you know you've created elsewhere, or\n            you've seen it somewhere on the web, and you want to copy it instead\n            of starting again from scratch. But you can't remember where exactly\n            it was.\n          </p>\n\n          <p>\n            3 dusty old projects, and 10 google searches later yet you still\n            haven't found what you were looking for. If only there was a way to\n            save all of our important reusable code in one place.\n          </p>\n\n          <h3>\n            Because I encountered this problem many times over I decided to\n            create the code library.\n          </h3>\n\n          <p>\n            The Code Library is a platform where you can store and organize as\n            many code snippets as you like.\n          </p>\n\n          <p>\n            But the code library isn't simply for storing your own code. It's\n            also a place to share your code with people all across the world. \n            (this feature is still in development)\n          </p>\n\n          <p>\n            There is a general library with code snippets that everyone can\n            access.\n            <br />\n            Once you have an account and are logged in, you are able to create\n            your own code library.\n          </p>\n\n          <h2>Instructions for a personal library</h2>\n\n          <p>1) Create an account or login</p>\n\n          <p>2) Press \"my library\"</p>\n\n          <p>3) In the sidebar, add a category and then inside that category add a page</p>\n\n          <p>4) Open the page by clicking on it</p>\n\n          <p>5) Press \"edit page\"</p>\n\n          <p>\n            6) Add an example by entering the 2 textfields. The 1st textfield is\n            for your code. The 2nd textfield is optional, it's for when your\n            code has an output.\n          </p>\n\n          <p>7) Return to the view mode of your page by pressing \"view page\"</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Homepage;\n","import \"./style.css\";\nimport React from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { logOut } from \"../../store/user/actions\";\nimport { selectToken, selectUsername } from \"../../store/user/selectors\";\nimport { setCurrentLibraryUsername } from \"../../store/appState/actions\";\nimport { fetchCurrentLibrary } from \"../../store/currentLibrary/actions\";\n\nexport default function Header() {\n  const dispatch = useDispatch();\n  const token = useSelector(selectToken);\n  const username = useSelector(selectUsername);\n  const history = useHistory();\n\n  function logOutClicked() {\n    dispatch(logOut());\n    history.push(\"/\");\n  }\n\n  const loginLogoutControls = token ? (\n    <button style={{ fontSize: \"20px\" }} onClick={logOutClicked}>\n      Logout\n    </button>\n  ) : (\n    <a href={`/login`}>Login</a>\n  );\n\n  const myLibrary =\n    token && username !== \"admin\" && username !== \"undefined\" ? (\n      <button style={{ fontSize: \"20px\" }} onClick={myLibraryClicked}>\n        My Library\n      </button>\n    ) : null;\n\n  function generalLibraryClicked() {\n    dispatch(setCurrentLibraryUsername(\"admin\"));\n    dispatch(fetchCurrentLibrary());\n    history.push(\"/\");\n  }\n\n  function myLibraryClicked() {\n    dispatch(setCurrentLibraryUsername(username));\n    dispatch(fetchCurrentLibrary());\n    history.push(\"/\");\n  }\n\n  return (\n    <div className=\"header\">\n      <div className=\"header-left\">\n        <h1>The Code Library</h1>\n        <a href={`/`}>Home</a>\n        <button style={{ fontSize: \"20px\" }} onClick={generalLibraryClicked}>\n          General Library\n        </button>\n        {myLibrary}\n      </div>\n      <div className=\"header-right\">\n        {loginLogoutControls}\n        <a href={`/signup`}>Signup</a>\n      </div>\n    </div>\n  );\n}\n","export const selectCurrentLibrary = state => state.currentLibrary;\n","import React, { useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { addPage } from \"../../store/user/actions\";\nimport { selectUsername } from \"../../store/user/selectors\";\nimport { selectCurrentLibraryUsername } from \"../../store/appState/selectors\";\n\nfunction SidebarCategory({ category, categoryStyle, linkStyle, inputStyle }) {\n  const dispatch = useDispatch();\n  const loggedInUsername = useSelector(selectUsername);\n  const currentLibraryUsername = useSelector(selectCurrentLibraryUsername);\n  const [newPageName, setNewPageName] = useState(\"\");\n\n  function onSubmit(event) {\n    if (event.key === \"Enter\") {\n      setNewPageName(\"\");\n      dispatch(addPage(newPageName, category.id));\n    }\n  }\n\n  const pageInput =\n    loggedInUsername === currentLibraryUsername ? (\n      <input\n        type=\"text\"\n        placeholder=\" + add new page...\"\n        value={newPageName}\n        onChange={(event) => setNewPageName(event.target.value)}\n        onKeyPress={onSubmit}\n        onBlur={() => setNewPageName(\"\")}\n        style={inputStyle}\n      />\n    ) : null;\n\n  return (\n    <>\n      <h3 style={categoryStyle}>{category.name}</h3>\n\n      {category.pages.map((page) => {\n        return (\n          <a key={page.id} href={`/view-page/${page.id}`} style={linkStyle}>\n            {page.name}\n          </a>\n        );\n      })}\n      {pageInput}\n    </>\n  );\n}\n\nexport default SidebarCategory;\n","import \"./style.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { addCategory } from \"../../store/user/actions\";\nimport { selectUsername } from \"../../store/user/selectors\";\nimport { fetchCurrentLibrary } from \"../../store/currentLibrary/actions\";\nimport { selectCurrentLibrary } from \"../../store/currentLibrary/selectors\";\nimport { selectCurrentLibraryUsername } from \"../../store/appState/selectors\";\n\nimport SidebarCategory from \"../SidebarCategory\";\n\nfunction Sidebar() {\n  const dispatch = useDispatch();\n  const currentLibrary = useSelector(selectCurrentLibrary);\n  const loggedInUsername = useSelector(selectUsername);\n  const currentLibraryUsername = useSelector(selectCurrentLibraryUsername);\n  const [categoryFontSize, setCategoryFontSize] = useState(\"30px\");\n  const [linkFontSize, setLinkFontSize] = useState(\"20px\");\n  const [inputWidth, setInputWidth] = useState(\"170px\");\n  const [newCategoryName, setNewCategoryName] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(fetchCurrentLibrary());\n  }, [dispatch]);\n\n  const categoryStyle = {\n    fontSize: categoryFontSize,\n  };\n\n  const linkStyle = {\n    fontSize: linkFontSize,\n  };\n\n  const inputStyle = {\n    width: inputWidth,\n  };\n\n  function sidebarHoverOn() {\n    setCategoryFontSize(\"30px\");\n    setLinkFontSize(\"20px\");\n    setInputWidth(\"170px\");\n  }\n\n  function sidebarHoverOut() {\n    setCategoryFontSize(\"0px\");\n    setLinkFontSize(\"0px\");\n    setInputWidth(\"0px\");\n  }\n\n  function onSubmit(event) {\n    if (event.key === \"Enter\") {\n      setNewCategoryName(\"\");\n      dispatch(addCategory(newCategoryName, currentLibrary.id));\n    }\n  }\n\n  const categoryInput =\n    loggedInUsername === currentLibraryUsername ? (\n      <input\n        type=\"text\"\n        placeholder=\" + add new category...\"\n        value={newCategoryName}\n        onChange={(event) => setNewCategoryName(event.target.value)}\n        onKeyPress={onSubmit}\n        onBlur={() => setNewCategoryName(\"\")}\n        style={inputStyle}\n      />\n    ) : null;\n\n  return (\n    <div\n      className=\"sidebar\"\n      onMouseEnter={sidebarHoverOn}\n      onMouseLeave={sidebarHoverOut}\n    >\n      {currentLibrary.categories.map((category) => {\n        return (\n          <SidebarCategory\n            key={category.id}\n            category={category}\n            categoryStyle={categoryStyle}\n            linkStyle={linkStyle}\n            inputStyle={inputStyle}\n          />\n        );\n      })}\n      <br />\n      {categoryInput}\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import \"./App.css\";\nimport React, { useEffect } from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserWithStoredToken } from \"./store/user/actions\";\nimport { selectCurrentLibraryUsername } from \"./store/appState/selectors\";\nimport { setCurrentLibraryUsernameDefault } from \"./store/appState/actions\";\n\nimport Login from \"./pages/Login\";\nimport SignUp from \"./pages/SignUp\";\nimport ViewPage from \"./pages/ViewPage\";\nimport EditPage from \"./pages/EditPage\";\nimport Homepage from \"./pages/Homepage\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const currentLibraryUsername = useSelector(selectCurrentLibraryUsername);\n\n  useEffect(() => {\n    dispatch(getUserWithStoredToken());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentLibraryUsername === \"undefined\")\n      dispatch(setCurrentLibraryUsernameDefault());\n  }, [dispatch, currentLibraryUsername]);\n\n  return (\n    <div className=\"grid-container\">\n      <Header />\n      <Sidebar />\n      <div className=\"main\">\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n          <Route path=\"/view-page/:pageId\" component={ViewPage} />\n          <Route path=\"/edit-page/:pageId\" component={EditPage} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/login\" component={Login} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  APP_LOADING,\n  APP_DONE_LOADING,\n  SET_MESSAGE,\n  CLEAR_MESSAGE,\n  SET_CURRENT_LIBRARY_USERNAME_DEFAULT,\n  SET_CURRENT_LIBRARY_USERNAME,\n} from \"./actions\";\n\nconst initialState = {\n  loading: false,\n  message: null,\n  currentLibraryUsername: localStorage.getItem(\"currentLibraryUsername\"),\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case APP_LOADING:\n      return { ...state, loading: true };\n\n    case APP_DONE_LOADING:\n      return { ...state, loading: false };\n\n    case SET_MESSAGE:\n      return { ...state, message: action.payload };\n\n    case CLEAR_MESSAGE:\n      return { ...state, message: null };\n\n    case SET_CURRENT_LIBRARY_USERNAME_DEFAULT:\n      localStorage.setItem(\"currentLibraryUsername\", \"admin\");\n      return { ...state, currentLibraryUsername: \"admin\" };\n\n    case SET_CURRENT_LIBRARY_USERNAME:\n      localStorage.setItem(\"currentLibraryUsername\", action.payload);\n      return { ...state, currentLibraryUsername: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { LOG_OUT, LOGIN_SUCCESS, TOKEN_STILL_VALID } from \"./actions\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return { ...state, ...action.payload };\n\n    case LOG_OUT:\n      localStorage.removeItem(\"token\");\n      return { ...initialState, token: null };\n\n    case TOKEN_STILL_VALID:\n      return { ...state, ...action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { FETCH_CURRENT_LIBRARY } from \"./actions\";\n\nconst initialState = {\n    categories: [\n    ],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CURRENT_LIBRARY:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n","import { FETCH_CURRENT_PAGE } from \"./actions\";\n\nconst initialState = {\n  name: \"\",\n  examples: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CURRENT_PAGE:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport appState from \"./appState/reducer\";\nimport user from \"./user/reducer\";\nimport currentLibrary from \"./currentLibrary/reducer\";\nimport currentPage from \"./currentPage/reducer\";\n\nexport default combineReducers({\n  appState,\n  user,\n  currentLibrary,\n  currentPage,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport ReduxThunk from \"redux-thunk\";\nimport reducer from \"./rootReducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(ReduxThunk));\n\nconst store = createStore(reducer, enhancer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}